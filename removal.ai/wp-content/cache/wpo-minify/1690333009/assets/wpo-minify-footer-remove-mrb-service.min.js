"use strict";
var MRBService = {
  fileList: [],
  folderPath: "",
  packageId: 0,
  totalPayment: 0,
  sentDraft: "",
  orderId: null,
  secret: "iNivDmHLpUA223sqsfhqGbMRdRj1PVkH",
  orderHookUrl: "https://crm.removal.ai/api/manual-orders/webhooks/",
};
(function ($) {
  MRBService.init = function () {
    var order_button = $(".mrb-control");
    $("#mrb-upload").click(function (e) {
      e.preventDefault();
      $("#mrb-file-upload").click();
    });
    $("#mrb-upload").on("dragleave dragend", function (e) {
      e.preventDefault();
      e.stopPropagation();
    });
    $("#mrb-upload").on("drop", function (e) {
      e.stopPropagation();
      e.preventDefault();
      const files = e.originalEvent.dataTransfer.files;
      MRBService.uploadFile(files);
    });
    $("#mrb-file-upload").on("change", function (e) {
      var files = $(this).get(0).files;
      MRBService.uploadFile(files);
    });
    $("#c_name").focusout(function () {
      MRBService.updateInformation();
    });
    $("#c_email").focusout(function () {
      MRBService.updateInformation();
    });
    $("#c_note").focusout(function () {
      MRBService.updateInformation();
    });
    RemovalMain.registerOnClick(order_button);
    this.loadDraftOrder();
  };
  MRBService.updateInformation = function () {
    $.ajax({
      url: MRBService.orderHookUrl + MRBService.orderId,
      headers: { SecretKey: MRBService.secret },
      type: "PUT",
      data: JSON.stringify({
        id: MRBService.orderId,
        email: $("#c_email").val(),
        displayName: $("#c_name").val(),
        note: $("#c_note").val(),
      }),
      contentType: "application/json",
      success: function (response) {
        MRBService.packageCalculation();
      },
    });
  };
  MRBService.loadDraftOrder = function () {
    $(".manual-form-loading").show();
    MRBService.orderId = window.localStorage.getItem("manual_draft_order");
    if (MRBService.orderId) {
      $.ajax({
        url: MRBService.orderHookUrl + MRBService.orderId,
        headers: { SecretKey: MRBService.secret },
        type: "GET",
        processData: !1,
        contentType: !1,
        success: function (response) {
          $(".manual-form-loading").hide();
          $("#c_email").val(response.email);
          $("#c_name").val(response.displayName);
          $("#c_note").val(response.note);
          MRBService.fileList = response.files;
          response.files?.forEach(function (item) {
            var newImageItem = $(
              `<div class="mrb-image-item" data-id="${item.id}" >` +
                `<div class="mrb-image-remove" data-id="${item.id}" data-onClick="MRBService.removeFile"><i class="fas fa-times"></i></div>` +
                `<img src="${item.thumbnail
                  .replace("%", "%25")
                  .replace("#", "%23")}">` +
                `</div>`
            );
            $("#mrb-image").append(newImageItem);
            RemovalMain.registerOnClick(newImageItem);
            MRBService.packageCalculation();
          });
        },
        error: function (response) {
          $.ajax({
            url: MRBService.orderHookUrl,
            headers: { SecretKey: MRBService.secret },
            type: "POST",
            data: JSON.stringify({ displayName: "", email: null, note: "" }),
            contentType: "application/json; charset=utf-8",
            success: function (response) {
              $(".manual-form-loading").hide();
              MRBService.orderId = response.id;
              window.localStorage.setItem("manual_draft_order", response.id);
              MRBService.packageCalculation();
            },
          });
        },
      });
    } else {
      $.ajax({
        url: MRBService.orderHookUrl,
        headers: { SecretKey: MRBService.secret },
        type: "POST",
        data: JSON.stringify({ displayName: "", email: null, note: "" }),
        contentType: "application/json; charset=utf-8",
        success: function (response) {
          $(".manual-form-loading").hide();
          MRBService.orderId = response.id;
          window.localStorage.setItem("manual_draft_order", response.id);
        },
      });
    }
  };
  MRBService.uploadFile = function (files) {
    var file_count = MRBService.fileList.length;
    if (files.length + file_count > 20) {
      RemovalMain.showMessage(
        "The maximum number of files is 20, please contact us for a larger package! ",
        2
      );
      throw new "The maximum number of files is 20, please contact us for a larger package!"();
    }
    var mrbImage = $("#mrb-image");
    Array.from(files).forEach(function () {
      mrbImage.append(
        '<div class="mrb-image-item-loader">' +
          '<img src="https://removal.ai/wp-content/uploads/loading.svg" width="75" height="75">' +
          "</div>"
      );
    });
    var form_data = new FormData();
    for (var index = 0; index < files.length; index++) {
      form_data.append("files", files[index]);
    }
    $.ajax({
      url: MRBService.orderHookUrl + MRBService.orderId + "/files",
      type: "POST",
      headers: { SecretKey: MRBService.secret },
      data: form_data,
      processData: !1,
      contentType: !1,
      success: function (response) {
        MRBService.fileList = [...MRBService.fileList, ...response];
        mrbImage.find(".mrb-image-item-loader").remove();
        response.forEach(function (item) {
          var newImageItem = $(
            `<div class="mrb-image-item" data-id="${item.id}">` +
              `<div class="mrb-image-remove" data-id="${item.id}" data-onClick="MRBService.removeFile"><i class="fas fa-times"></i></div>` +
              `<img src="${item.thumbnail
                .replace("%", "%25")
                .replace("#", "%23")}">` +
              `</div>`
          );
          mrbImage.append(newImageItem);
          RemovalMain.registerOnClick(newImageItem);
        });
        MRBService.packageCalculation();
      },
      error: function () {
        console.error("Error!");
      },
    });
  };
  MRBService.removeFile = function (item) {
    const id = $(item).data("id");
    $.ajax({
      url: MRBService.orderHookUrl + MRBService.orderId + "/files/" + id,
      type: "DELETE",
      headers: { SecretKey: MRBService.secret },
      success: function (response) {
        $("#mrb-image").find(`.mrb-image-item[data-id="${id}"]`).remove();
        MRBService.fileList = MRBService.fileList.filter(
          (item) => item.id != id
        );
        MRBService.packageCalculation();
      },
      error: function () {
        console.error("Error!");
      },
    });
  };
  MRBService.pendingPayment = function () {
    var c_email = $("#c_email").val();
    var c_name = $("#c_name").val();
    var c_note = $("#c_note").val();
    var totalPayment = MRBService.totalPayment;
    $.ajax({
      url: MRBService.orderHookUrl + MRBService.orderId + "/pending-payment",
      type: "PUT",
      headers: { SecretKey: MRBService.secret },
      data: JSON.stringify({
        id: MRBService.orderId,
        email: c_email,
        displayName: c_name,
        note: c_note,
        totalPayment: totalPayment,
      }),
      contentType: "application/json",
      error: function () {
        throw new Error("Error pending payment!");
      },
    });
  };
  MRBService.packageCalculation = function () {
    var file_count = MRBService.fileList.length;
    var package_list = $(".mrb-pricing-item")
      .map(function () {
        return parseInt($(this).attr("data-image"));
      })
      .get();
    if (file_count > Math.max(...package_list)) {
      $("#order-submit").text("Contact Us");
      return;
    } else {
      $("#order-submit").text("Order Now");
      var package_image = package_list.reduce(function (prev, curr) {
        return file_count > prev ? curr : prev;
      });
      $(`.mrb-pricing-item.active`).removeClass("active");
      $(`.mrb-pricing-item[data-image="${package_image}"]`).addClass("active");
      MRBService.packageId = $(
        `.mrb-pricing-item[data-image="${package_image}"]`
      ).data("package");
      MRBService.totalPayment = $(
        `.mrb-pricing-item[data-image="${package_image}"]`
      ).data("total");
    }
  };
  MRBService.submitOrder = function () {
    var file_count = MRBService.fileList.length;
    if (file_count > 20) {
      window.location.href = "/contact";
      return;
    }
    var c_email = $("#c_email").val();
    var c_name = $("#c_name").val();
    var c_note = $("#c_note").val();
    var packageId = MRBService.packageId;
    var orderId = MRBService.orderId;
    if (
      !/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*$/.test(
        c_email
      )
    ) {
      RemovalMain.showMessage("Please enter your email!", 2);
      throw new "Please enter your email!"();
    }
    if (!c_email || !c_name || !packageId) {
      return;
    } else {
      $("#order-submit").text("Processing ...");
      $("#order-submit").prop("disabled", !0);
      MRBService.pendingPayment();
      $.ajax({
        url: RemovalMain.data.ajax_url,
        type: "POST",
        data: {
          action: "rm_process_order_manual_removal_background_service",
          s_field: RemovalMain.data.ajax_s_field,
          email: c_email,
          name: c_name,
          note: c_note,
          package: packageId,
          orderId: orderId,
        },
        success: function (response) {
          response = $.parseJSON(response);
          window.location.href = response.redirect_url;
        },
        error: function () {
          $("#order-submit").text("Order Now");
          $("#order-submit").prop("disabled", !1);
          console.error("Error!");
        },
      });
    }
  };
  $(document).on("ready", function () {
    MRBService.init();
    $(function () {
      let pricingTab = $(".mrb-pricing");
      let pricingTabWidth = pricingTab.width();
      let pContainer = $(".mrb-pricing-container");
      let pContainerWidth = pContainer.width();
      $(".mrb-pricing").mousemove(function (e) {
        let currentOffsetLeft = $(this).offset().left;
        let newContainerOffsetLeft = parseFloat(
          (currentOffsetLeft - e.pageX).toFixed(1)
        );
        if (pContainerWidth + newContainerOffsetLeft > pricingTabWidth) {
          if (newContainerOffsetLeft > -50) {
            newContainerOffsetLeft = 0;
          }
          if (newContainerOffsetLeft - 50 < -pricingTabWidth) {
            newContainerOffsetLeft = -pricingTabWidth;
          }
          pContainer.css({ left: newContainerOffsetLeft + "px" });
        }
      });
    });
    $("html").on("dragover drop dragenter dragleave dragexit", function (e) {
      e.preventDefault();
      e.stopPropagation();
    });
  });
})(jQuery);
