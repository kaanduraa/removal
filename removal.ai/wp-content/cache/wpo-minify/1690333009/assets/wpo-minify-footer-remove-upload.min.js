"use strict";
(function ($) {
  var apiToken = null;
  var trustToken = null;
  var progressInterval = null;
  var timeoutLoading = null;
  var db = null;
  var dbName = "tempFiles";
  var initIndexedDb = function () {
    var DBOpenRequest = window.indexedDB.open(dbName, 4);
    DBOpenRequest.onsuccess = (event) => {
      console.log("DBOpenRequest success");
      db = DBOpenRequest.result;
      checkTempFile();
    };
    DBOpenRequest.onerrror = (e) => {
      console.log("DBOpenRequest error", e);
    };
    DBOpenRequest.onupgradeneeded = (event) => {
      console.log("DBOpenRequest upgradeneeded");
      db = event.target.result;
      db.createObjectStore(dbName, { autoIncrement: !0 });
    };
  };
  var dataURLtoFile = function (dataurl, filename) {
    var arr = dataurl.split(","),
      mime = arr[0].match(/:(.*?);/)[1],
      bstr = atob(arr[arr.length - 1]),
      n = bstr.length,
      u8arr = new Uint8Array(n);
    while (n--) {
      u8arr[n] = bstr.charCodeAt(n);
    }
    return new File([u8arr], filename, { type: mime });
  };
  var getApiTokenAsync = async function () {
    if (!apiToken) {
      var data = await RemovalMain.ajaxGet(RemovalMain.data.ajax_url, {
        action: "rm_api_token",
        s_field: RemovalMain.data.ajax_s_field,
      });
      apiToken = data.token;
    }
    return apiToken;
  };
  var getTrustTokenAsync = async function () {
    var maxTry = 5;
    var data = await RemovalMain.ajaxPostJson(
      RemovalMain.data.api_token_url,
      null,
      trustToken ? { "WEB-TOKEN": trustToken } : null
    );
    while (data.challenge && maxTry-- > 0) {
      var nums = eval(atob(data.response)).map((v, i) => (v * 2 + i) * 2);
      var response = btoa(JSON.stringify(nums));
      data = await RemovalMain.ajaxPostJson(RemovalMain.data.api_token_url, {
        challenge: data.challenge,
        response: response,
      });
    }
    trustToken = data.token;
    return trustToken;
  };
  var initUpload = function () {
    $(document).on("click", "#quick_try_list img", function (e) {
      e.preventDefault();
      e.stopPropagation();
      var file = $(this).data("origin-src");
      if (window.location.href.includes("upload")) {
        processUploadAsync(file, "qtr");
      } else {
        processFreeUpload(file, "qtr");
      }
    });
    const upload = document.getElementById("rm_upload_file");
    if (typeof upload != "undefined" && upload != null) {
      upload.addEventListener(
        "change",
        function (evt) {
          const file = evt.target.files[0];
          var isValid = validateFile(file, this);
          if (isValid == 1) {
            processUploadAsync(file, "upl");
          }
        },
        !1
      );
    }
    const ct_upload = document.getElementById("rm_ct_upload_file");
    if (typeof ct_upload != "undefined" && ct_upload != null) {
      ct_upload.addEventListener(
        "change",
        function (evt) {
          const file = evt.target.files[0];
          var isValid = validateFile(file, this);
          if (isValid == 1) {
            processUploadAsync(file, "upl");
          }
        },
        !1
      );
    }
    const free_upload = document.getElementById("rm_free_upload_file");
    if (typeof free_upload != "undefined" && free_upload != null) {
      free_upload.addEventListener(
        "change",
        function (evt) {
          const file = evt.target.files[0];
          var isValid = validateFile(file, this);
          if (isValid == 1) {
            processFreeUpload(file, "fru");
          }
        },
        !1
      );
    }
  };
  var initDragDrop = function () {
    $("html").on("dragover drop dragenter dragleave dragexit", function (e) {
      e.preventDefault();
      e.stopPropagation();
    });
    $("html").on("dragenter", function (e) {
      $(".drop-image-wrapper").css("display", "flex");
    });
    $("html").on("dragexit", function (e) {
      $(".drop-image-wrapper").css("display", "none");
    });
    $(".drop-image-wrapper").on("dragleave dragend", function (e) {
      e.preventDefault();
      e.stopPropagation();
      $(".drop-image-wrapper").css("display", "none");
    });
    $(".drop-image-wrapper").on("drop", function (e) {
      e.stopPropagation();
      e.preventDefault();
      $(".drop-image-wrapper").css("display", "none");
      const file = e.originalEvent.dataTransfer.files[0];
      var isValid = validateFile(file);
      if (isValid == 1) {
        if (window.location.href.includes("upload")) {
          processUploadAsync(file, "drp");
        } else {
          processFreeUpload(file, "drp");
        }
      }
    });
  };
  var validateFile = function (file, input) {
    if (!file || file.length == 0 || file.size < 0) {
      return -1;
    }
    var types = ["image/jpeg", "image/jpg", "image/png"];
    if (typeof file.type != "undefined" && types.indexOf(file.type) < 0) {
      dislayError(input, RemovalMain.data.file_type_invalid);
      return -1;
    }
    if (
      typeof file.size != "undefined" &&
      file.size > parseInt(RemovalMain.data.max_size)
    ) {
      dislayError(input, RemovalMain.data.over_file_size);
      return -1;
    }
    dislayError(input, null);
    return 1;
  };
  var dislayError = function (input, msg) {
    if (msg) {
      if (!input) {
        RemovalMain.showMessage(msg, 2);
      } else {
        $(input)
          .closest("form")
          .find(".rm-upload-message")
          .html(msg)
          .removeClass("rm-hidden");
      }
    } else {
      $(".rm-upload-message").addClass("rm-hidden");
    }
  };
  var processUploadAsync = async function (file, source) {
    var container = $(".rm-upload-container"),
      template = wp.template("rm-result-item-template"),
      item = $(template([]));
    $(".rm-upload-content", container).fadeOut(function () {
      $(".rm-upload-process-content", container)
        .removeClass("rm-hidden")
        .fadeIn(function () {
          $(".rm-upload-process-bottom-inner").prepend(item);
          $(".ui.progress", item).progress();
          $(".img-origin img", item).on("load", function () {
            setImageSize(this, item);
          });
          var originImage =
            typeof file == "string" ? file : URL.createObjectURL(file);
          $(".img-origin img", item).attr("src", originImage);
          timeoutLoading = setTimeout(function () {
            $(".img-origin img", item).addClass("rm-hidden");
            $(".img-origin .rm-bg-loading", item).removeClass("rm-hidden");
          }, 2500);
          uploadAsync(file, originImage, item, source);
        });
    });
  };
  var processFreeUpload = function (file, source) {
    localStorage.setItem("upload_source", source);
    if (db != null) {
      var transaction = db.transaction([dbName], "readwrite");
      var objectStore = transaction.objectStore(dbName);
      var objectStoreRequest = objectStore.add(file);
      objectStoreRequest.onsuccess = function () {
        location = RemovalMain.data.home_url + "/upload";
      };
    } else if (typeof file == "string") {
      var url = $(".rm-upload-content.rm-upload-free").attr("data-url");
      var frm =
        '<form id="frm_free_upload_data" style="display: none" action="' +
        url +
        '" method="POST">' +
        '<input type="hidden" id="hf_free_file" name="hf_free_file" value="' +
        file +
        '" >' +
        "</form>";
      $(frm).appendTo("body").submit();
    } else {
      var reader = new FileReader();
      reader.readAsDataURL(file);
      reader.onloadend = function () {
        var base64data = reader.result;
        var url = $(".rm-upload-content.rm-upload-free").attr("data-url");
        var frm =
          '<form id="frm_free_upload_data" style="display: none" action="' +
          url +
          '" method="POST">' +
          '<input type="hidden" id="hf_free_file" name="hf_free_file" value="' +
          base64data +
          '" >' +
          '<input type="hidden" id="hf_free_file_name" name="hf_free_file_name" value="' +
          file.name +
          '" >' +
          "</form>";
        $(frm).appendTo("body").submit();
      };
    }
  };
  var processBase64Upload = function (base64Data) {
    var width = 6000,
      height = 6000,
      url = $(".rm-upload-content.rm-upload-free").attr("data-url"),
      base64 = base64Data.split(",")[1],
      prefix = base64Data.split(",")[0];
    if (window.location.href.includes("upload")) {
      var container = $(".rm-upload-container"),
        template = wp.template("rm-result-item-template"),
        item = $(template([]));
      $(".rm-upload-content", container).fadeOut(function () {
        $(".rm-upload-process-content", container)
          .removeClass("rm-hidden")
          .fadeIn(function () {
            $(".rm-upload-process-bottom-inner").prepend(item);
            $(".ui.progress", item).progress();
            $(".img-origin img", item).attr("src", base64Data);
            timeoutLoading = setTimeout(function () {
              $(".img-origin img", item).addClass("rm-hidden");
              $(".img-origin .rm-bg-loading", item).removeClass("rm-hidden");
            }, 2500);
            upload(base64, "try-demo", width, height, item);
          });
      });
    } else {
      var frm =
        '<form id="frm_free_upload_data" style="display: none" action="' +
        url +
        '" method="POST">' +
        '<input type="hidden" id="hf_free_file" name="hf_free_file" value="' +
        base64 +
        '" >' +
        '<input type="hidden" id="hf_free_file_name" name="hf_free_file_name" value="try-demo" >' +
        '<input type="hidden" id="hf_file_prefix" name="hf_file_prefix" value="' +
        prefix +
        '" >' +
        '<input type="hidden" id="hf_width" name="hf_width" value="' +
        width +
        '">' +
        '<input type="hidden" id="hf_height" name="hf_height" value="' +
        height +
        '">' +
        "</form>";
      $(frm).appendTo("body").submit();
    }
  };
  var uploadFromUrl = function () {
    let imageURL = prompt("Please enter image URL");
    processTryUpload(imageURL);
  };
  var uploadFromClipBoard = function () {
    window.addEventListener(
      "paste",
      function (pasteEvent) {
        if (pasteEvent.clipboardData == !1) {
          throw "No data";
        }
        var items = pasteEvent.clipboardData.items;
        if (items == undefined) {
          throw "No data";
        }
        for (var i = 0; i < items.length; i++) {
          if (items[i].type.indexOf("image") == -1) continue;
          var file = items[i].getAsFile();
          var isValid = validateFile(file);
          if (isValid == 1) {
            if (window.location.href.includes("upload")) {
              processUploadAsync(file, "clb");
            } else {
              processFreeUpload(file, "clb");
            }
          }
        }
      },
      !1
    );
  };
  var processTryUpload = function (url) {
    var img = new Image();
    img.crossOrigin = "anonymous";
    img.onload = function () {
      const canvas = document.createElement("canvas");
      const ctx = canvas.getContext("2d");
      canvas.width = img.width;
      canvas.height = img.height;
      ctx.drawImage(img, 0, 0);
      const dataUrl = canvas.toDataURL("image/jpeg", 0.8);
      var width = $("body").hasClass("logged-in") ? 6000 : 1600,
        height = $("body").hasClass("logged-in") ? 6000 : 1600,
        url = $(".rm-upload-content.rm-upload-free").attr("data-url"),
        base64 = dataUrl.split(",")[1],
        prefix = dataUrl.split(",")[0];
      var frm =
        '<form id="frm_free_upload_data" style="display: none" action="' +
        url +
        '" method="POST">' +
        '<input type="hidden" id="hf_free_file" name="hf_free_file" value="' +
        base64 +
        '" >' +
        '<input type="hidden" id="hf_free_file_name" name="hf_free_file_name" value="try-demo" >' +
        '<input type="hidden" id="hf_file_prefix" name="hf_file_prefix" value="' +
        prefix +
        '" >' +
        '<input type="hidden" id="hf_width" name="hf_width" value="' +
        width +
        '">' +
        '<input type="hidden" id="hf_height" name="hf_height" value="' +
        height +
        '">' +
        "</form>";
      $(frm).appendTo("body").submit();
    };
    img.src = url;
    img.onerror = function () {
      alert("Cannot load your image url, please try again with upload image!");
    };
  };
  var getHighResolution = function ($pci_id, ...elms) {
    elms.map((elm) => {
      elm.on("click", function (event) {
        event.preventDefault();
        let targetClick = $(event.target);
        let virtualEditButton = elm
          .parents(".rm-result-item")
          .find(".rme-image.rme-high-res");
        let virtualEraserButton = elm
          .parents(".rm-result-item")
          .find(".rmr-image.rmr-high-res");
        if (
          virtualEditButton &&
          virtualEditButton.attr("data-image") &&
          targetClick.hasClass("rme-high-res")
        ) {
          virtualEditButton.click();
        } else if (
          virtualEraserButton &&
          virtualEraserButton.attr("data-res") &&
          targetClick.hasClass("rmr-high-res")
        ) {
          virtualEraserButton.click();
        } else {
          elm.addClass("loading");
          $.ajax({
            url: RemovalMain.data.ajax_url,
            type: "POST",
            data: {
              action: "rm_get_high_resolution",
              pci_id: $pci_id,
              s_field: RemovalMain.data.ajax_s_field,
            },
            success: function (response) {
              response = $.parseJSON(response);
              if (
                typeof response.result != "undefined" &&
                response.result == 1
              ) {
                elm.removeClass("loading");
                virtualEditButton.attr("data-image", response.high_resolution);
                virtualEraserButton.attr("data-res", response.high_resolution);
                if (elm.hasClass("rm-bt-download")) {
                  elm.attr("href", response.high_resolution);
                  elm.off("click");
                  window.open(response.high_resolution, "_blank");
                } else {
                  let downloadButton = elm
                    .parents(".rm-result-item")
                    .find(".rm-bt-high-res.rm-bt-download");
                  downloadButton.attr("href", response.high_resolution);
                  downloadButton.off("click");
                  if (elm.hasClass("rme-before")) {
                    virtualEditButton.click();
                  }
                  if (elm.hasClass("rmr-before")) {
                    virtualEraserButton.click();
                  }
                }
              }
            },
            error: function () {},
          });
        }
        return !1;
      });
    });
  };
  var initFreeUpload = function () {
    var freeContainer = $(".rm-free-upload-content");
    if (typeof freeContainer != "undefined" && freeContainer.length > 0) {
      var data = $("#hf_free_file", freeContainer).text(),
        file_name = $("#hf_free_file_name", freeContainer).val();
      if (data != "") {
        var file = data.match(/^data:/) ? dataURLtoFile(data, file_name) : data;
        var source = localStorage.getItem("upload_source") || "hme";
        processUploadAsync(file, source);
        $(".rm-free-upload-content").remove();
      }
    }
  };
  var checkTempFile = function () {
    if (window.location.href.includes("upload")) {
      if (db != null) {
        var transaction = db.transaction([dbName], "readwrite");
        var objectStore = transaction.objectStore(dbName);
        var objectStoreRequest = objectStore.getAll();
        objectStoreRequest.onsuccess = function (event) {
          var files = event.target.result;
          console.log("db get all", files);
          if (files.length > 0) {
            var source = localStorage.getItem("upload_source") || "hme";
            var file = files.pop();
            processUploadAsync(file, source);
            objectStore.clear();
          }
        };
      }
    }
  };
  var uploadAsync = async function (file, originImage, item, source) {
    try {
      const upload_result_offset = $("#rm-upload-result").offset();
      const offset_reponsive = $(window).width() > 768 ? 80 : 20;
      $("html, body").animate(
        { scrollTop: upload_result_offset.top - offset_reponsive },
        600
      );
      progressInterval = setInterval(function () {
        var percent = $(".ui.progress", item).attr("data-percent");
        percent = parseInt(percent);
        if (percent < 80) {
          $(".ui.progress", item).progress("increment", 3);
        } else {
          clearInterval(progressInterval);
        }
      }, 100);
      var headers = {};
      if (RemovalMain.isLoggedIn()) {
        headers["RM-TOKEN"] = await getApiTokenAsync();
      }
      headers["WEB-TOKEN"] = await getTrustTokenAsync();
      var data =
        typeof file == "string"
          ? { image_url: file, usrc: source }
          : { image_file: file, usrc: source };
      await RemovalMain.ajaxPostFormData(
        RemovalMain.data.api_remove_url,
        data,
        headers
      ).then((response) => {
        clearTimeout(timeoutLoading);
        $(".ui.progress", item).progress("increment", 80);
        $(".img-origin", item).removeClass("loading");
        $(".img-origin img", item).removeClass("rm-hidden");
        $(".img-origin .rm-bg-loading", item).remove();
        if (response.status == 200) {
          $(".rme-button", item).show();
          $(".rme-image.rme-preview", item).attr(
            "data-image",
            response.low_resolution
          );
          $(".rmr-image.rmr-preview", item)
            .attr("data-img", originImage)
            .attr("data-res", response.low_resolution);
          $(".rmr-image.rmr-high-res", item).attr("data-img", originImage);
          var imageResultElement = $(
              '<img src = "' + response.preview_demo + '">'
            ),
            preloaded = 0,
            total = imageResultElement.length;
          imageResultElement.hide();
          imageResultElement.on("load", function () {
            if (++preloaded === total) {
              $(".ui.progress", item).progress("increment", 100);
              $(".rm-bg-result", item).html(imageResultElement);
              imageResultElement.show();
            }
          });
          $("a.rm-bt-download:not(.rm-bt-high-res)", item)
            .removeClass("rm-disable")
            .attr("href", response.low_resolution);
          $(".rmem-image", item).attr("data-image", response.low_resolution);
          $('a[href="#removed-image"]', item).trigger("click");
          $(".rm-skeleton-group", item).addClass("rm-hidden");
          $(".rm-button-group", item).removeClass("rm-hidden");
          $(".img-origin", item).removeClass("loading");
          $(".rm-free-download-dimention span", item).html(
            `${response.preview_width} x ${response.preview_height}`
          );
          $(".rm-high-download-dimention span", item).html(
            `${response.original_width} x ${response.original_height}`
          );
          $(".preview-dimentions", item).html(
            `${response.preview_width} x ${response.preview_height}`
          );
          $(".full-dimentions", item).html(
            `${response.original_width} x ${response.original_height}`
          );
          if (response.high_resolution) {
            $(".rme-image.rme-high-res", item).attr(
              "data-image",
              response.high_resolution
            );
            $(".rme-before.rme-high-res", item).on("click", function (e) {
              e.preventDefault();
              $(".rme-image.rme-high-res", item).click();
            });
            $(".rmr-image.rmr-high-res", item)
              .attr("data-img", originImage)
              .attr("data-res", response.high_resolution);
            $(".rmr-before.rmr-high-res", item).on("click", function (e) {
              e.preventDefault();
              $(".rmr-image.rmr-high-res", item).click();
            });
            $(".rm-download-high-res", item).removeClass("rm-hidden");
            $("a.rm-bt-download.rm-bt-high-res", item).attr(
              "href",
              response.high_resolution
            );
          } else {
            $(".rm-download-high-res", item).removeClass("rm-hidden");
            $("a.rm-bt-download.rm-bt-high-res", item).removeAttr("download");
            $("a.rm-bt-download.rm-bt-high-res", item).click(function (e) {
              e.preventDefault();
              window.location.href = $(
                "a.rm-bt-download.rm-bt-high-res",
                item
              ).data("pricing-url");
            });
            $(".rme-before.rme-high-res", item).click(function (e) {
              e.preventDefault();
              window.location.href = $(
                "a.rm-bt-download.rm-bt-high-res",
                item
              ).data("pricing-url");
            });
            $(".rmr-before.rmr-high-res", item).click(function (e) {
              e.preventDefault();
              window.location.href = $(
                "a.rm-bt-download.rm-bt-high-res",
                item
              ).data("pricing-url");
            });
          }
        } else {
          throw response;
        }
      });
    } catch (e) {
      clearTimeout(timeoutLoading);
      $('a[href="#removed-image"]', item).addClass("rm-error");
      $('a[href="#removed-image"]', item).trigger("click");
      $(".rm-upload-control", item).html("").css("padding", "0");
      $(".rm-bg-result", item).addClass("rm-hidden");
      $(".rme-button", item).addClass("rm-hidden");
      if (e.code && e.error && e.message) {
        if (e.error == "USER_CREDIT_ERROR") {
          $(".rm-out-of-credit-error", item).removeClass("rm-hidden");
        } else {
          $(".rm-remove-error", item).removeClass("rm-hidden");
        }
      } else {
        $(".rm-upload-message", item)
          .html(RemovalMain.data.error_message)
          .removeClass("rm-hidden");
      }
    }
  };
  var setImageSize = function (image, item) {
    if (window.innerWidth > 754) {
      var maxImageHeightDisplay = image.naturalHeight > 514 ? 514 : 480;
      var newImageWidth =
        (maxImageHeightDisplay * image.naturalWidth) / image.naturalHeight;
      $(".rm-upload-result", item).css("width", newImageWidth);
      $(".rm-upload-result", item).css("height", maxImageHeightDisplay);
    }
  };
  var showLoading = function (container) {
    var loading =
      '<div class="fat-sb-loading-container"><div class="ui segment">\n' +
      '  <div class="ui active dimmer">\n' +
      '    <div class="ui small text loader">Processing ...</div>\n' +
      "  </div>\n" +
      "  <p></p>\n" +
      "</div></div>";
    $(container).append(loading);
  };
  var initTab = function () {
    $(document).on("click", "a[data-toggle=rm-tab]", function (e) {
      e.preventDefault();
      $(this).parents(".nav-tabs").find("li.active").removeClass("active");
      $(this).parent().addClass("active");
      const targetId = $(this).attr("href");
      const targetParrent = $(this).parents(".rm-result-item");
      targetParrent.find(".tab-pane.active").removeClass("active");
      targetParrent.find(targetId).addClass("active");
    });
  };
  var initRateResult = function (template) {
    $(".rm-result-rating input", template).click(function (e) {
      console.log($(this).val());
    });
  };
  var addItemToStorage = function (item) {
    if (!item) {
      throw new "Error: 1101"();
    }
    item.date = new Date();
    let removedData =
      (localStorage.getItem("hello-removal") &&
        JSON.parse(localStorage.getItem("hello-removal"))) ||
      [];
    removedData.push(item);
    localStorage.setItem("hello-removal", JSON.stringify(removedData));
  };
  var downloadHighresItem = function (preview_id, high_resolution) {
    let currentData =
      (localStorage.getItem("hello-removal") &&
        JSON.parse(localStorage.getItem("hello-removal"))) ||
      [];
    if (currentData.length < 1) {
      throw new "Error: 1102"();
    }
    let indexUpdate = currentData.findIndex((i) => i.preview_id == preview_id);
    if (!indexUpdate) {
      throw new "Error: 1103"();
    }
    currentData[indexUpdate].high_resolution = high_resolution;
    localStorage.setItem("hello-removal", JSON.stringify(currentData));
  };
  var initRemovedFromStorage = function () {
    if (!window.location.pathname.includes("upload")) {
      return;
    }
    let currentData =
      (localStorage.getItem("hello-removal") &&
        JSON.parse(localStorage.getItem("hello-removal"))) ||
      [];
    let timeCompare = new Date();
    timeCompare.setMinutes(timeCompare.getMinutes() - 50);
    currentData = currentData.filter((i) => new Date(i.date) > timeCompare);
    if (currentData.length > 0) {
      currentData.map((response) => {
        var container = $(".rm-upload-container"),
          template = wp.template("rm-result-item-template"),
          item = $(template([]));
        $(".rm-upload-content", container).hide();
        $(".rm-upload-process-content", container).removeClass("rm-hidden");
        $(".rm-upload-process-bottom-inner").prepend(item);
        $(".rm-loading-origin", item).remove();
        $(".img-origin img", item).attr("src", response.original_image);
        $(".rme-button", item).show();
        $(".rme-image.rme-preview", item).attr("data-image", response.url);
        var imageResultElement = $(
            '<img src = "' + response.preview_demo + '">'
          ),
          preloaded = 0,
          total = imageResultElement.length;
        imageResultElement.hide();
        imageResultElement.on("load", function () {
          if (++preloaded === total) {
            $(".ui.progress", item).progress("increment", 100);
            $(".rm-bg-result", item).html(imageResultElement);
            imageResultElement.show();
          }
        });
        $("a.rm-bt-download:not(.rm-bt-high-res)", item)
          .removeClass("rm-disable")
          .attr("href", response.url);
        $('a[href="#removed-image"]', item).trigger("click");
        $(".rm-skeleton-group", item).addClass("rm-hidden");
        $(".rm-button-group", item).removeClass("rm-hidden");
        $(".img-origin", item).removeClass("loading");
        $(".rm-free-download-dimention span", item).html(
          `${response.preview_width} x ${response.preview_height}`
        );
        $(".rm-high-download-dimention span", item).html(
          `${response.original_width} x ${response.original_height}`
        );
        if (typeof response.high_resolution && response.high_resolution != "") {
          $(".rme-image.rme-high-res", item).attr(
            "data-image",
            response.high_resolution
          );
          $(".rme-before.rme-high-res", item).on("click", function (e) {
            e.preventDefault();
            $(".rme-image.rme-high-res", item).click();
          });
          $(".rm-download-high-res", item).removeClass("rm-hidden");
          $("a.rm-bt-download.rm-bt-high-res", item).attr(
            "href",
            response.high_resolution
          );
        } else {
          if (
            typeof response.preview_id != "undefined" &&
            response.preview_id != ""
          ) {
            if (
              typeof response.total_credit != "undefined" &&
              parseInt(response.total_credit) > 0
            ) {
              $(".rm-download-high-res", item).removeClass("rm-hidden").show();
              getHighResolution(
                response.preview_id,
                $("a.rm-bt-download.rm-bt-high-res", item),
                $(".rme-before.rme-high-res", item)
              );
            } else {
              $(".rm-download-high-res", item).removeClass("rm-hidden");
              $("a.rm-bt-download.rm-bt-high-res", item).removeAttr("download");
              $("a.rm-bt-download.rm-bt-high-res", item).click(function (e) {
                e.preventDefault();
                window.location.href = $(
                  "a.rm-bt-download.rm-bt-high-res",
                  item
                ).data("pricing-url");
              });
            }
          } else {
            $(".rm-download-high-res", item).hide();
          }
        }
      });
    }
  };
  $(document).ready(function () {
    initIndexedDb();
    initDragDrop();
    initUpload();
    initFreeUpload();
    uploadFromClipBoard();
    initTab();
    $(document).on("click", "button.x-button-drop", function () {
      if (!$(this).parents(".x-split-button").hasClass("open"))
        $(this).parents(".x-split-button").addClass("open");
    });
    $(document).on("click", ".x-split-button", function (event) {
      event.stopPropagation();
    });
    $(document).on("click", function () {
      if ($(".x-split-button").hasClass("open"))
        $(".x-split-button").removeClass("open");
    });
    $(document).on("click", "#needOneCreditClose", function () {
      $("#needOneCredit").addClass("is-hidden");
    });
  });
})(jQuery);
